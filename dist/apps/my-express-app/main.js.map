{"version":3,"file":"main.js","mappings":";;;;;;;AAAA;;;;;;ACAA;;;;;;ACAA;;;;;;ACAA;;;;;;ACAA;;;;;;ACAA;;;;;UCAA;UACA;;UAEA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;;UAEA;UACA;;UAEA;UACA;UACA;;;;;;;;ACtBA;;;GAGG;;;AAEH,kEAA8B;AAC9B,0DAA6B;AAE7B,2CAAmC;AACnC,2EAAkC;AAClC,uCAAwC;AAExC,MAAM,GAAG,GAAG,qBAAO,GAAE,CAAC;AAEtB,GAAG,CAAC,GAAG,CAAC,SAAS,EAAE,iBAAO,CAAC,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,SAAS,EAAE,QAAQ,CAAC,CAAC,CAAC,CAAC;AAEnE,GAAG,CAAC,GAAG,CAAC,MAAM,EAAE,CAAC,GAAG,EAAE,GAAG,EAAE,EAAE;IAC3B,MAAM,IAAI,GAAS;QACjB,EAAE,EAAE,CAAC;QACL,KAAK,EAAE,aAAa;QACpB,IAAI,EAAE,SAAS;KAChB,CAAC;IAEF,GAAG,CAAC,IAAI,CAAC,EAAE,OAAO,EAAE,2BAA2B,EAAE,IAAI,EAAE,CAAC,CAAC;AAC3D,CAAC,CAAC,CAAC;AAEH,GAAG,CAAC,GAAG,CAAC,SAAS,EAAE,CAAC,GAAG,EAAE,GAAG,EAAE,EAAE;IAC9B,MAAM,IAAI,GAAS;QACjB,EAAE,EAAE,CAAC;QACL,KAAK,EAAE,aAAa;QACpB,OAAO,EAAE,kCAAkC;QAC3C,SAAS,EAAE,IAAI;QACf,QAAQ,EAAE,CAAC;KACZ,CAAC;IAEF,GAAG,CAAC,IAAI,CAAC,EAAE,OAAO,EAAE,aAAa,EAAE,IAAI,EAAE,CAAC,CAAC;AAC7C,CAAC,CAAC,CAAC;AAEH,MAAM,IAAI,GAAG,OAAO,CAAC,GAAG,CAAC,IAAI,IAAI,IAAI,CAAC;AAEtC,MAAM,MAAM,GAAG,GAAG,CAAC,MAAM,CAAC,IAAI,EAAE,GAAG,EAAE;IACnC,OAAO,CAAC,GAAG,CAAC,iCAAiC,IAAI,MAAM,CAAC,CAAC;AAC3D,CAAC,CAAC,CAAC;AAEH,MAAM,EAAE,GAAG,IAAI,kBAAM,CAAC,MAAM,EAAE;IAC5B,IAAI,EAAE,gBAAgB;CACvB,CAAC,CAAC;AAEH,EAAE,CAAC,EAAE,CAAC,YAAY,EAAE,CAAC,MAAM,EAAE,EAAE;IAC7B,OAAO,CAAC,GAAG,CAAC,kBAAkB,CAAC,CAAC;IAEhC,8BAAE,EAAC,MAAM,CAAC,CAAC,EAAE,CAAC,WAAW,EAAE,CAAC,MAAM,EAAE,EAAE;QACpC,MAAM,YAAY,GAAG,aAAK,CAAC,KAAK,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC;QAC9C,MAAM,uBAAuB,GAAG,MAAM,CAAC,IAAI,CAAC,YAAY,CAAC,CAAC;QAC1D,MAAM,iBAAiB,GAAG,MAAM,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC;QAC1C,iBAAiB,CAAC,aAAa,CAAC,uBAAuB,CAAC,MAAM,EAAE,CAAC,CAAC,CAAC;QAEnE,MAAM,CAAC,KAAK,CAAC,iBAAiB,CAAC,CAAC;QAEhC,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,uBAAuB,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;YACvD,MAAM,CAAC,KAAK,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC,uBAAuB,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;SACzD;QAED,MAAM,CAAC,GAAG,EAAE,CAAC;IACf,CAAC,CAAC,CAAC;AACL,CAAC,CAAC,CAAC;AAEH,MAAM,CAAC,EAAE,CAAC,OAAO,EAAE,OAAO,CAAC,KAAK,CAAC,CAAC","sources":["webpack:///external commonjs \"tslib\"","webpack:///external commonjs \"express\"","webpack:///external node-commonjs \"path\"","webpack:///external commonjs \"socket.io\"","webpack:///external commonjs \"socket.io-stream\"","webpack:///external commonjs \"@faker-js/faker\"","webpack:///webpack/bootstrap","webpack:///./src/main.ts"],"sourcesContent":["module.exports = require(\"tslib\");","module.exports = require(\"express\");","module.exports = require(\"path\");","module.exports = require(\"socket.io\");","module.exports = require(\"socket.io-stream\");","module.exports = require(\"@faker-js/faker\");","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","/**\n * This is not a production server yet!\n * This is only a minimal backend to get started.\n */\n\nimport express from 'express';\nimport * as path from 'path';\nimport { type User, type Post } from \"@prisma/client\";\nimport { Server } from 'socket.io';\nimport ss from 'socket.io-stream';\nimport { faker } from \"@faker-js/faker\";\n\nconst app = express();\n\napp.use('/assets', express.static(path.join(__dirname, 'assets')));\n\napp.get('/api', (req, res) => {\n  const user: User = {\n    id: 1,\n    email: \"foo@bar.com\",\n    name: \"Foo Bar\"\n  };\n\n  res.send({ message: 'Welcome to my-express-app', user });\n});\n\napp.get('/api/hw', (req, res) => {\n  const post: Post = {\n    id: 1,\n    title: \"Hello World\",\n    content: \"This is a post about Hello World\",\n    published: true,\n    authorId: 1\n  };\n\n  res.send({ message: 'Hello World', post });\n});\n\nconst port = process.env.PORT || 3333;\n\nconst server = app.listen(port, () => {\n  console.log(`Listening at http://localhost:${port}/api`);\n});\n\nconst io = new Server(server, {\n  path: '/api/socket.io'\n});\n\nio.on('connection', (socket) => {\n  console.log('a user connected');\n\n  ss(socket).on('greetings', (stream) => {\n    const randomString = faker.lorem.sentences(5);\n    const randomStringAsByteArray = Buffer.from(randomString);\n    const lengthAsByteArray = Buffer.alloc(4);\n    lengthAsByteArray.writeUInt32BE(randomStringAsByteArray.length, 0);\n\n    stream.write(lengthAsByteArray);\n\n    for (let i = 0; i < randomStringAsByteArray.length; i++) {\n      stream.write(Buffer.from([randomStringAsByteArray[i]]));\n    }\n\n    stream.end();\n  });\n});\n\nserver.on('error', console.error);\n"],"names":[],"sourceRoot":""}